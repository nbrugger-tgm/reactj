/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
}
java{
    version = 1.8
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
}
tasks.withType(Javadoc) {
    failOnError = false
}
publishing {
    publications {
        lib(MavenPublication) {
            groupId = 'com.niton'
            artifactId = 'reactj'
            version = '3.0.0'
            from components.java
        }
    }

    repositories {
        maven {
            name = "Artifactory"
            credentials {
                username = "nbrugger@student.tgm.ac.at"
                def pwdFile = new File("TOKENS")
                if (pwdFile.exists())
                    password = pwdFile.readLines().get(0)
                else
                    password = System.getenv("ARTIFACTORY_API_KEY")
            }
            url = "https://niton.jfrog.io/artifactory/java-libs"
        }
    }
}
/**
 * This are the settings you can and should modify
 */
def useMavenRepos = true
def isApplication = false
dependencies {
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

repositories {
    if (useMavenRepos) {
        mavenLocal()
        mavenCentral()
    }
    jcenter()
}

if (isApplication) {
    application {
        mainClassName = mainClass
    }
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
    jacoco {
        enabled = true
        dumpOnExit = true
        classDumpDir = null
        output = JacocoTaskExtension.Output.FILE
    }
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
jacoco {
    toolVersion = "0.8.5"
}
tasks.jar {
    manifest {
        attributes('Automatic-Module-Name': 'niton.reactj')
    }
}

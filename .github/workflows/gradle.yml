# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Setup"
        uses: "./.github/setup"
      - name: "Gradle Build"
        run: "./gradlew assemble"
  testing:
    runs-on: ubuntu-latest
    name: Testing
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Setup"
        uses: "./.github/setup"
      - name: "Run Unit tests"
        run: "./gradlew test"
  verify:
    name: "Verify"
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Setup"
        uses: "./.github/setup"
      - name: "Run verification"
        run: "./gradlew check"
      - name: "Sonar Qube"
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: "./gradlew sonarqube --info"
      - name: commit-code-coverage
        if: always()
        env:
          MODULES: "core lists observer utils"
          CC_TEST_REPORTER_ID: ${{ secrets.CC_RUNNER_TOKEN }}
        run: |
          for i in $MODULES; do
            echo "$i"
            export JACOCO_SOURCE_PATH=$(pwd)/$i/src/main/java/
            ./cc-test-reporter format-coverage $(pwd)/$i/build/reports/jacoco/coverage.xml --input-type jacoco
            ./cc-test-reporter upload-coverage
          done
      - name: "Stop Gradle deamon"
        if: always()
        run: "./gradlew --stop"
